@using SOFT331.Models;
@model SOFT331.ViewModels.TicketStatisticsViewModel
@{
    ViewBag.Title = "Ticket Statistics";
}

<h2>Ticket Statistics</h2>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Refine results</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FareId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.FareId, new SelectList(Model.FareList, "Id", "PrettyName"), "All", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FareId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TrainId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.TrainId, new SelectList(Model.TrainList, "Id", "Name"), "All", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TrainId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WheelchairOnly, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.WheelchairOnly)
                        @Html.ValidationMessageFor(model => model.WheelchairOnly, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control input-inline" } })
                        @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Go" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div id="ticket-statistics" class="col-md-6">
        <h4>Statistics for this search</h4>
        <hr />

        <dl class="dl-horizontal">
            <dt>
                Total tickets
            </dt>
            <dd>
                @Model.Tickets.Count()
            </dd>
            <dt>
                Total ticket value
            </dt>
            <dd>
                @Model.TotalSales
            </dd>
        </dl>

        <h4>Ticket breakdown</h4>
        @if (Model.TicketBreakdown.Count() > 0)
        {
            <dl class="dl-horizontal">
                @foreach (KeyValuePair<string, int> item in Model.TicketBreakdown.OrderByDescending(f => f.Value))
                {
                    <dt>
                        @item.Key
                    </dt>
                    <dd>
                        @item.Value
                    </dd>
                }
            </dl>
        }
        else
        {
            <p>No tickets returned for the provided parameters.</p>
        }
        
</div>
</div>

<h4>Tickets</h4>
<hr />

<table class="table">
    <tr>
        <th>Date of Travel</th>
        <th>Train</th>
        <th>Wheelchair required?</th>
        <th>Fare</th>
        <th>Discount</th>
        <th>Total Price</th>
    </tr>
    @foreach (Ticket ticket in Model.Tickets)
    {
        <tr>
            <td>@Html.DisplayFor(model => ticket.Timetable.Date)</td>
            <td>@Html.DisplayFor(model => ticket.Timetable.Train.Name)</td>
            <td>@Html.DisplayFor(model => ticket.WheelchairStatusString)</td>
            <td>@Html.DisplayFor(model => @ticket.Fare.PrettyName)</td>
            <td>
                @if(ticket.Discount != null)
                {
                    @ticket.Discount.ToString()
                }
            </td>
            <td>@Html.DisplayFor(model => @ticket.TotalPriceString)</td>
        </tr>
    }
</table>